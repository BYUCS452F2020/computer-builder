{"remainingRequest":"C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\src\\store.js","dependencies":[{"path":"C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\src\\store.js","mtime":1604043300746},{"path":"C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\peyto\\Documents\\College\\FS_20\\CS_452\\Project Assignments\\Computer_Builder_Project\\computer-builder\\front-end\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/peyto/Documents/College/FS_20/CS_452/Project Assignments/Computer_Builder_Project/computer-builder/front-end/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","user","builds","cpus","motherboards","gpus","rams","storages","psus","coolers","cases","cpuChosen","motherboardChosen","totalPSUReq","maxPrice","performanceRating","cpuFamily","currentBuild","cpu","motherboard","gpu","ram","storage","psu","cooler","case","name","mutations","setUser","console","log","username","setBuilds","setCPUs","setMotherboards","setGPUs","setRams","setStorages","setPSUs","setCoolers","setCases","changeCPU","componentName","changeMotherboard","mobo","changeGPU","changeRAM","changeStorage","changePSU","changeCooler","changeCase","casE","changeName","toggleCPU","toggleMotherboard","setPSUReq","num","getters","getUser","getBuilds","getMaxPrice","getPerformanceRating","getCpuFamily","getCpus","getMotherboards","getGpus","getRams","getStorages","getPsus","getCoolers","getCases","getCurrentBuild","gpuChosen","ramChosen","storageChosen","psuChosen","coolerChosen","caseChosen","actions","register","context","data","post","response","commit","message","login","password","logout","delete","get","getUserBuilds","saveCurrentBuild","componentID","pc_case","build_name","getSingleComponent","getCPUs","componentType","components","getGPUs","getPSUs"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    user: null,\r\n    builds: [],\r\n    cpus: [],\r\n    motherboards: [],\r\n    gpus: [],\r\n    rams: [],\r\n    storages: [],\r\n    psus: [],\r\n    coolers: [],\r\n    cases: [],\r\n    cpuChosen: false,\r\n    motherboardChosen: false,\r\n    totalPSUReq: 0,\r\n    maxPrice: 10000,\r\n    performanceRating: 0,\r\n    cpuFamily: null,\r\n    currentBuild: {\r\n      cpu: null,\r\n      motherboard: null,\r\n      gpu: null,\r\n      ram: null,\r\n      storage: null,\r\n      psu: null,\r\n      cooler: null,\r\n      case: null ,\r\n      name: null\r\n    },\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n        console.log(\"user is: \" + user.username)\r\n        state.user = user.username;\r\n    },\r\n    setBuilds(state, builds) {\r\n        state.builds = builds;\r\n    },\r\n    setCPUs(state, cpus) {\r\n        state.cpus = cpus;\r\n    },\r\n    setMotherboards(state, motherboards) {\r\n        state.motherboards = motherboards;\r\n    },\r\n    setGPUs(state, gpus) {\r\n        state.gpus = gpus;\r\n    },\r\n    setRams(state, rams) {\r\n        state.rams = rams;\r\n    },\r\n    setStorages(state, storages) {\r\n        state.storages = storages;\r\n    },\r\n    setPSUs(state, psus) {\r\n        state.psus = psus;\r\n    },\r\n    setCoolers(state, coolers) {\r\n        state.coolers = coolers;\r\n    },\r\n    setCases(state, cases) {\r\n        state.cases = cases;\r\n    },\r\n    changeCPU(state, cpu) {\r\n      console.log(\"changing cpu to: \" + cpu.componentName)\r\n        state.currentBuild.cpu = cpu;\r\n    },\r\n    changeMotherboard(state, mobo) {\r\n        state.currentBuild.motherboard = mobo;\r\n    },\r\n    changeGPU(state, gpu) {\r\n        state.currentBuild.gpu = gpu;\r\n    },\r\n    changeRAM(state, ram) {\r\n        state.currentBuild.ram = ram;\r\n    },\r\n    changeStorage(state, storage) {\r\n        state.currentBuild.storage = storage;\r\n    },\r\n    changePSU(state, psu) {\r\n        state.currentBuild.psu = psu;\r\n    },\r\n    changeCooler(state, cooler) {\r\n        state.currentBuild.cooler = cooler;\r\n    },\r\n    changeCase(state, casE) {\r\n        state.currentBuild.case = casE;\r\n    },\r\n    changeName(state, name) {\r\n      state.currentBuild.name = name\r\n    },\r\n    toggleCPU(state) {\r\n        state.cpuChosen = true;\r\n      console.log(\"CPU is now \" + state.cpuChosen)\r\n    },\r\n    toggleMotherboard(state) {\r\n        state.motherboardChosen = true;\r\n    },\r\n    setPSUReq(state, num) {\r\n      if (num == 0) {\r\n        state.totalPSUReq = 0;\r\n      }\r\n      else {\r\n        state.totalPSUReq = state.totalPSUReq + num;\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    getUser(state) {\r\n      return state.user\r\n    },\r\n    getBuilds (state) {\r\n      return state.builds\r\n    },\r\n    getMaxPrice(state) {\r\n      return state.maxPrice\r\n    },\r\n    getPerformanceRating(state) {\r\n      return state.performanceRating\r\n    },\r\n    getCpuFamily(state) {\r\n      return state.cpuFamily\r\n    },\r\n    getCpus(state) {\r\n      return state.cpus\r\n    },\r\n    getMotherboards(state) {\r\n      return state.motherboards\r\n    },\r\n    getGpus(state) {\r\n      return state.gpus\r\n    },\r\n    getRams(state) {\r\n      return state.rams\r\n    },\r\n    getStorages(state) {\r\n      return state.storages\r\n    },\r\n    getPsus(state) {\r\n      return state.psus\r\n    },\r\n    getCoolers(state) {\r\n      return state.coolers\r\n    },\r\n    getCases(state) {\r\n      return state.cases\r\n    },\r\n    getCurrentBuild(state) {\r\n      console.log(\"getting current build\")\r\n      return state.currentBuild\r\n    },\r\n    cpuChosen(state) {\r\n      if (state.currentBuild.cpu != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    motherboardChosen(state) {\r\n      if (state.currentBuild.motherboard != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    gpuChosen(state) {\r\n      if (state.currentBuild.gpu != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    ramChosen(state) {\r\n      if (state.currentBuild.ram != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    storageChosen(state) {\r\n      if (state.currentBuild.storage != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    psuChosen(state) {\r\n      if (state.currentBuild.psu != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    coolerChosen(state) {\r\n      if (state.currentBuild.cooler != null)\r\n        return true\r\n      else\r\n        return false\r\n    },\r\n    caseChosen(state) {\r\n      if (state.currentBuild.case != null)\r\n        return true\r\n      else\r\n        return false\r\n    }\r\n  },\r\n    actions: {\r\n    async register(context, data) {\r\n      try {\r\n        console.log(\"registering!\")\r\n        let response = await axios.post(\"http://localhost:8081/user/register\", data);\r\n        context.commit('setUser', response.data);\r\n        //console.log(\"user is \" + context.state.user);\r\n        return \"\";\r\n      } catch (error) {\r\n        //console.log(error.response.data.message);\r\n        return error.response.data.message;\r\n      }\r\n    },\r\n    async login(context, data) {\r\n      try {\r\n        console.log(data)\r\n        let response = await axios.post(\"http://localhost:8081/user/login/\" +\r\n                                          data.username + \"/\" +\r\n                                          data.password);\r\n        context.commit('setUser', response.data);\r\n        return \"\";\r\n      } catch (error) {\r\n        return error.response.data.message;\r\n      }\r\n    },\r\n    async logout(context) {\r\n      try {\r\n        await axios.delete(\"/api/users\");\r\n        context.commit('setUser', null);\r\n        return \"\";\r\n      } catch (error) {\r\n        return error.response.data.message;\r\n      }\r\n    },\r\n    async getUser(context) {\r\n      try {\r\n        let response = await axios.get(\"/api/users\");\r\n        context.commit('setUser', response.data);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"\";\r\n      }\r\n    },\r\n    async getUserBuilds(context) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/build/\"\r\n                                        + this.getters.getUser)\r\n        context.commit('setBuilds', response.data);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"\";\r\n      }\r\n    },\r\n    async saveCurrentBuild() {\r\n      try {\r\n        let currentBuild = this.getters.getCurrentBuild\r\n        console.log(this.getters.getUser)\r\n        console.log(currentBuild.name)\r\n        await axios.post('http://localhost:8081/builds/insert', {\r\n          username: this.getters.getUser,\r\n          cpu: currentBuild.cpu.componentID,\r\n          motherboard: currentBuild.motherboard.componentID,\r\n          gpu: currentBuild.gpu.componentID,\r\n          ram: currentBuild.ram.componentID,\r\n          storage: currentBuild.storage.componentID,\r\n          psu: currentBuild.psu.componentID,\r\n          cooler: currentBuild.cooler.componentID,\r\n          pc_case: currentBuild.case.componentID,\r\n          build_name: currentBuild.name\r\n        });\r\n        return \"\";\r\n      } catch (error) {\r\n        return error.response.data.message;\r\n      }\r\n    },\r\n    async getSingleComponent(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/one_component/\" + data.componentID)\r\n        return response.data\r\n      } catch (error) {\r\n        return \"couldn't get cpus\";\r\n      }      \r\n    },\r\n    async getCPUs(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setCPUs', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get cpus\";\r\n      }      \r\n    },\r\n    async getMotherboards(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setMotherboards', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get motherboards\";\r\n      }  \r\n    },\r\n    async getGPUs(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setGPUs', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get gpus\";\r\n      }  \r\n    },\r\n    async getRams(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setRams', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get rams\";\r\n      } \r\n    },\r\n    async getStorages(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setStorages', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get storages\";\r\n      } \r\n    },\r\n    async getPSUs(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setPSUs', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get psus\";\r\n      } \r\n    },\r\n    async getCoolers(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setCoolers', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get coolers\";\r\n      }  \r\n    },\r\n    async getCases(context, data) {\r\n      try {\r\n        let response = await axios.get(\"http://localhost:8081/component/\" +\r\n                                        data.componentType + \"/\" +\r\n                                        data.cpuFamily + \"/\" +\r\n                                        data.performanceRating + \"/\" +\r\n                                        data.maxPrice);\r\n        context.commit('setCases', response.data.components);\r\n        return \"\";\r\n      } catch (error) {\r\n        return \"couldn't get cases\";\r\n      } \r\n    }\r\n  }, \r\n})"]}]}